{{- $username := site.Data.social.github -}}
{{- with site.Params.gitHubToken -}}
    {{- $username = print $username ":" . -}}
{{- end -}}
{{- if not $username -}}
    {{ errorf "Input must be a GitHub username: %s" .Position }}
{{- end -}}

{{- $githubHeaders := dict -}}
{{- if in $username ":" -}}
    {{- $githubAuthorization := print "Basic " (base64Encode $username) -}}
    {{- $githubHeaders = merge $githubHeaders (dict "Authorization" $githubAuthorization) -}}
    {{- $username = index (split $username ":") 0 -}}
{{- end -}}

{{/* For debugging, use https://docs.github.com/en/graphql/overview/explorer. */}}
{{- $userQuery := printf `
query {
    user(login: "%s") {
        url
        login
    }
}
` $username -}}
{{- $userBody := dict "query" $userQuery | jsonify (dict "noHTMLEscape" true) -}}
{{- $userOpts := dict "method" "post" "body" $userBody "headers" $githubHeaders -}}
{{- with try (resources.GetRemote "https://api.github.com/graphql" $userOpts) -}}
    {{- with .Err -}}{{- errorf "%s" . -}}
    {{- else with .Value -}}
        {{- with .Content | unmarshal -}}
            <a href="{{ .data.user.url }}" rel="noreferrer" target="_blank">@{{ .data.user.login }}</a>
        {{- else -}}
            {{- errorf "Unable to parse GitHub GraphQL API response." -}}
        {{- end -}}
    {{- else -}}
        {{- errorf "Unable to get GitHub GraphQL API response." -}}
    {{- end -}}
{{- end -}}
