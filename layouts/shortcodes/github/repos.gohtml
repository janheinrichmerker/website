{{- $username := site.Data.social.github -}}
{{- with site.Params.gitHubToken -}}
    {{- $username = print $username ":" . -}}
{{- end -}}
{{- if not $username -}}
    {{ errorf "Input must be a GitHub username: %s" .Position }}
{{- end -}}

{{- $githubHeaders := dict -}}
{{- if in $username ":" -}}
    {{- $githubAuthorization := print "Basic " (base64Encode $username) -}}
    {{- $githubHeaders = merge $githubHeaders (dict "Authorization" $githubAuthorization) -}}
    {{- $username = index (split $username ":") 0 -}}
{{- end -}}

{{/* For debugging, use https://docs.github.com/en/graphql/overview/explorer. */}}
{{- $userQuery := printf `
query {
    user(login: "%s") {
        url
        repositories(
            orderBy: {
                field: STARGAZERS,
                direction: DESC,
            },
            first: 0,
            isLocked: false,
            affiliations: [
                OWNER,
                COLLABORATOR,
                ORGANIZATION_MEMBER,
            ],
            privacy: PUBLIC,
        ) {
            totalCount
        }
    }
}
` $username -}}
{{- $userBody := dict "query" $userQuery | jsonify (dict "noHTMLEscape" true) -}}
{{- $userOpts := dict "method" "post" "body" $userBody "headers" $githubHeaders -}}
{{- $repositoriesCount := 0 -}}
{{- $userUrl := "" -}}
{{- with try (resources.GetRemote "https://api.github.com/graphql" $userOpts) -}}
    {{- with .Err -}}{{- errorf "%s" . -}}
    {{- else with .Value -}}
        {{- with .Content | unmarshal -}}
            {{- $repositoriesCount = .data.user.repositories.totalCount -}}
            {{- $userUrl = .data.user.url -}}
        {{- else -}}
            {{- errorf "Unable to parse GitHub GraphQL API response." -}}
        {{- end -}}
    {{- else -}}
        {{- errorf "Unable to get GitHub GraphQL API response." -}}
    {{- end -}}
{{- end -}}

{{- $repositories := slice -}}
{{- $step := 100 -}}
{{- $continuation := "null" -}}
{{- range $start := seq 0 $step $repositoriesCount -}}
    {{/* For debugging, use https://docs.github.com/en/graphql/overview/explorer. */}}
    {{- $reposQuery := printf `
    query {
        user(login: "%s") {
            repositories(
                orderBy: {
                    field: STARGAZERS,
                    direction: DESC,
                },
                first: %d,
                after: %s,
                isLocked: false,
                affiliations: [
                    OWNER,
                    COLLABORATOR,
                    ORGANIZATION_MEMBER,
                ],
                privacy: PUBLIC,
            ) {
                totalCount
                pageInfo {
                    endCursor
                }
                nodes {
                    name
                    nameWithOwner
                    owner {
                        login
                    }
                    stargazerCount
                    description
                    pushedAt
                    primaryLanguage {
                        name
                    }
                    languages(
                        first: 100
                    ) {
                        edges{
                            node {
                                name
                            }
                            size
                        }
                    }
                }
            }
        }
    }
    ` $username $step $continuation -}}
    {{- $reposBody := dict "query" $reposQuery | jsonify (dict "noHTMLEscape" true) -}}
    {{- $reposOpts := dict "method" "post" "body" $reposBody "headers" $githubHeaders -}}
    {{- $reposCount := 0 -}}
    {{- with try (resources.GetRemote "https://api.github.com/graphql" $reposOpts) -}}
        {{- with .Err -}}{{- errorf "%s" . -}}
        {{- else with .Value -}}
            {{- with .Content | unmarshal -}}
                {{- with .data.user.repositories.nodes -}}
                    {{- $repositories = append $repositories . -}}
                {{- end -}}
                {{- with .data.user.repositories.pageInfo.endCursor -}}
                    {{- $continuation = printf `"%s"` . -}}
                {{- else -}}
                    {{- break -}}
                {{- end -}}
            {{- else -}}
                {{- errorf "Unable to parse GitHub GraphQL API response." -}}
            {{- end -}}
        {{- else -}}
            {{- errorf "Unable to get GitHub GraphQL API response." -}}
        {{- end -}}
    {{- end -}}
{{- end -}}

{{/* Count repositories and bytes per language. */}}
{{- $languageRepos := dict -}}
{{- $primaryLanguageRepos := dict -}}
{{- $languageOwnRepos := dict -}}
{{- $languageBytes := dict -}}
{{- range $repositories -}}
    {{- $owner := .owner.login -}}
    {{- $primaryLanguage := "" -}}
    {{- with .primaryLanguage -}}
        {{- $primaryLanguage = .name -}}
    {{- end -}}
    {{/* Count repositories and bytes. */}}
    {{- range .languages.edges -}}
        {{- $oldLanguageRepos := index $languageRepos .node.name | default 0 -}}
        {{- $newLanguageRepos := add $oldLanguageRepos 1 -}}
        {{- $languageRepos = merge $languageRepos (dict .node.name $newLanguageRepos) -}}
        {{- if eq .node.name $primaryLanguage -}}
            {{- $oldPrimaryLanguageRepos := index $primaryLanguageRepos .node.name | default 0 -}}
            {{- $newPrimaryLanguageRepos := add $oldPrimaryLanguageRepos 1 -}}
            {{- $primaryLanguageRepos = merge $primaryLanguageRepos (dict .node.name $newPrimaryLanguageRepos) -}}
        {{- end -}}
        {{- if eq $owner $username -}}
            {{- $oldLanguageOwnRepos := index $languageOwnRepos .node.name | default 0 -}}
            {{- $newLanguageOwnRepos := add $oldLanguageOwnRepos 1 -}}
            {{- $languageOwnRepos = merge $languageOwnRepos (dict .node.name $newLanguageOwnRepos) -}}
        {{- end -}}
        {{- $oldLanguageBytes := index $languageBytes .node.name | default 0 -}}
        {{- $newLanguageBytes := add $oldLanguageBytes .size -}}
        {{- $languageBytes = merge $languageBytes (dict .node.name $newLanguageBytes) -}}
    {{- end -}}
{{- end -}}

{{/* Join all language names. */}}
{{- $languageNames := slice -}}
{{- range $languageName, $_ := $languageRepos -}}
    {{- $languageNames = append $languageName $languageNames -}}
{{- end -}}
{{- $languageNames = uniq $languageNames -}}

{{/* Map language counter to dicts. */}}
{{- $languages := slice -}}
{{- range $languageNames -}}
    {{- $languageName := . -}}
    {{- $languageReposCount := index $languageRepos $languageName | default 0 -}}
    {{- $primaryLanguageReposCount := index $primaryLanguageRepos $languageName | default 0 -}}
    {{- $languageOwnReposCount := index $languageOwnRepos $languageName | default 0 -}}
    {{- $languageBytesCount := index $languageBytes $languageName | default 0 -}}
    {{- $language := dict "name" $languageName "reposCount" $languageReposCount "primaryReposCount" $primaryLanguageReposCount "ownReposCount" $languageOwnReposCount "bytesCount" $languageBytesCount -}}
    {{- $languages = append $language $languages -}}
{{- end -}}

{{/* Remove languages with less than 1 owned repo. */}}
{{- $languages = where $languages "ownReposCount" "ge" 1 -}}
{{/* Remove languages with less than 1 repo where the language is the primary language. */}}
{{- $languages = where $languages "primaryReposCount" "ge" 1 -}}
{{/* Remove languages with less than 3 repos. */}}
{{- $languages = where $languages "reposCount" "ge" 3 -}}
{{/* Sort languages by descending bytes count. */}}
{{- $languages = sort $languages "bytesCount" "desc" -}}
{{/* Cut-off after top-10. */}}
{{- $languages = first 10 $languages -}}

{{/* List most common languages. */}}
{{- with $languages -}}
    <figure>
        <table>
            <thead>
            <tr>
                <th>{{- i18n "programmingLanguage" -}}</th>
                <th>{{- i18n "topRepository" -}}</th>
                <th>{{- i18n "moreRepositories" -}}</th>
            </tr>
            </thead>
            <tbody>
            {{- range . -}}
                {{- $language := . -}}
                {{/* Select repos of this language. */}}
                {{- $languageRepos := where $repositories "primaryLanguage" "ne" nil -}}
                {{- $languageRepos := where $languageRepos "primaryLanguage.name" "eq" .name -}}
                <tr>
                    <td>
                        <a href="{{ $userUrl }}?tab=repositories&language={{ lower .name }}" rel="noreferrer"
                           target="_blank">{{ .name }}</a><br>
                        {{- $bytes := .bytesCount -}}
                        {{- $kilobytes := div $bytes 1000 -}}
                        {{- $megabytes := div $kilobytes 1000 -}}
                        <small>
                            📚 {{ .reposCount }}&emsp;
                            💾&nbsp;{{- $megabytes | lang.FormatNumber 2 -}} MB
                        </small>
                    </td>

                    {{- $topRepos := $languageRepos -}}
                    {{/* Sort repositories by descending stargazers count. */}}
                    {{- $topRepos = sort $topRepos "stargazerCount" "desc" -}}
                    {{/* Remove repositories without description. */}}
                    {{- $topRepos = where $topRepos "description" "ne" nil -}}
                    {{/* Get top-ranked repository. */}}
                    {{- $topRepo := index $topRepos 0 -}}
                    {{/* Remove top-ranked repository for other repositories. */}}
                    {{- $languageRepos = where $languageRepos "name" "ne" $topRepo.name -}}
                    <td>
                        {{- with $topRepo -}}
                            <a href="{{- .url -}}" rel="noreferrer" target="_blank">{{- .nameWithOwner -}}</a><br>
                            <small>
                                {{- $description := .description -}}
                                {{- if not (in "abcdefghijklmnopqrstuvwxyz" (substr (lower $description) 0 1)) -}}
                                    {{- $description = substr $description 2 -}}
                                {{- end -}}
                                {{- $description -}}
                            </small><br>
                            <small>
                                📅 {{ dateFormat ":date_short" .pushedAt }}&emsp;
                                ⭐ {{ .stargazerCount }}
                            </small>
                        {{- end -}}
                    </td>

                    {{- $mostStarredRepos := $languageRepos -}}
                    {{/* Remove repositories without stargazers. */}}
                    {{- $mostStarredRepos = where $mostStarredRepos "stargazers_count" "gt" 0 -}}
                    {{/* Sort repositories by descending stargazers count. */}}
                    {{- $mostStarredRepos = sort $mostStarredRepos "stargazers_count" "desc" -}}
                    {{/* Cut-off after top-3. */}}
                    {{- $mostStarredRepos = first 3 $mostStarredRepos -}}

                    {{- $lastUpdatedRepos := $languageRepos -}}
                    {{/* Sort repositories by last push. */}}
                    {{- $lastUpdatedRepos = sort $lastUpdatedRepos "pushed_at" "desc" -}}
                    {{/* Cut-off after top-3. */}}
                    {{- $lastUpdatedRepos = first 3 $lastUpdatedRepos -}}

                    {{- $moreRepos := append $mostStarredRepos $lastUpdatedRepos -}}
                    {{/* Remove duplicate repositories. */}}
                    {{- $moreRepos = uniq $moreRepos -}}
                    {{/* Sort repositories by descending stargazers count. */}}
                    {{- $moreRepos = sort $moreRepos "stargazers_count" "desc" -}}
                    {{/* Cut-off after top-3. */}}
                    {{- $moreRepos = first 3 $moreRepos -}}
                    <td style="max-width:15em;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;">
                        {{- range $moreRepos -}}
                            <small><a href="{{ .html_url }}" rel="noreferrer" target="_blank">{{ .name }}</a></small><br>
                        {{- end -}}
                    </td>
                </tr>
            {{- end -}}
            </tbody>
        </table>
    </figure>
{{- end -}}
